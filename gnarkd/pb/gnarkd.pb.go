// Copyright 2020 ConsenSys Software Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: pb/gnarkd.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProveResult_Status int32

const (
	ProveResult_QUEUED          ProveResult_Status = 0
	ProveResult_RUNNING         ProveResult_Status = 1
	ProveResult_COMPLETED       ProveResult_Status = 2
	ProveResult_ERRORED         ProveResult_Status = 3
	ProveResult_WAITING_WITNESS ProveResult_Status = 4
)

// Enum value maps for ProveResult_Status.
var (
	ProveResult_Status_name = map[int32]string{
		0: "QUEUED",
		1: "RUNNING",
		2: "COMPLETED",
		3: "ERRORED",
		4: "WAITING_WITNESS",
	}
	ProveResult_Status_value = map[string]int32{
		"QUEUED":          0,
		"RUNNING":         1,
		"COMPLETED":       2,
		"ERRORED":         3,
		"WAITING_WITNESS": 4,
	}
)

func (x ProveResult_Status) Enum() *ProveResult_Status {
	p := new(ProveResult_Status)
	*p = x
	return p
}

func (x ProveResult_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProveResult_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_pb_gnarkd_proto_enumTypes[0].Descriptor()
}

func (ProveResult_Status) Type() protoreflect.EnumType {
	return &file_pb_gnarkd_proto_enumTypes[0]
}

func (x ProveResult_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProveResult_Status.Descriptor instead.
func (ProveResult_Status) EnumDescriptor() ([]byte, []int) {
	return file_pb_gnarkd_proto_rawDescGZIP(), []int{1, 0}
}

type ProveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CircuitID string `protobuf:"bytes,1,opt,name=circuitID,proto3" json:"circuitID,omitempty"`
	Witness   []byte `protobuf:"bytes,2,opt,name=witness,proto3,oneof" json:"witness,omitempty"`
}

func (x *ProveRequest) Reset() {
	*x = ProveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_gnarkd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProveRequest) ProtoMessage() {}

func (x *ProveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_gnarkd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProveRequest.ProtoReflect.Descriptor instead.
func (*ProveRequest) Descriptor() ([]byte, []int) {
	return file_pb_gnarkd_proto_rawDescGZIP(), []int{0}
}

func (x *ProveRequest) GetCircuitID() string {
	if x != nil {
		return x.CircuitID
	}
	return ""
}

func (x *ProveRequest) GetWitness() []byte {
	if x != nil {
		return x.Witness
	}
	return nil
}

type ProveResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID  string             `protobuf:"bytes,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
	Status ProveResult_Status `protobuf:"varint,2,opt,name=status,proto3,enum=gnarkd.ProveResult_Status" json:"status,omitempty"`
	Err    *string            `protobuf:"bytes,3,opt,name=err,proto3,oneof" json:"err,omitempty"`
	Proof  []byte             `protobuf:"bytes,4,opt,name=proof,proto3,oneof" json:"proof,omitempty"`
}

func (x *ProveResult) Reset() {
	*x = ProveResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_gnarkd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProveResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProveResult) ProtoMessage() {}

func (x *ProveResult) ProtoReflect() protoreflect.Message {
	mi := &file_pb_gnarkd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProveResult.ProtoReflect.Descriptor instead.
func (*ProveResult) Descriptor() ([]byte, []int) {
	return file_pb_gnarkd_proto_rawDescGZIP(), []int{1}
}

func (x *ProveResult) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

func (x *ProveResult) GetStatus() ProveResult_Status {
	if x != nil {
		return x.Status
	}
	return ProveResult_QUEUED
}

func (x *ProveResult) GetErr() string {
	if x != nil && x.Err != nil {
		return *x.Err
	}
	return ""
}

func (x *ProveResult) GetProof() []byte {
	if x != nil {
		return x.Proof
	}
	return nil
}

type JobStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobID string `protobuf:"bytes,1,opt,name=jobID,proto3" json:"jobID,omitempty"`
}

func (x *JobStatusRequest) Reset() {
	*x = JobStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pb_gnarkd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatusRequest) ProtoMessage() {}

func (x *JobStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_gnarkd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatusRequest.ProtoReflect.Descriptor instead.
func (*JobStatusRequest) Descriptor() ([]byte, []int) {
	return file_pb_gnarkd_proto_rawDescGZIP(), []int{2}
}

func (x *JobStatusRequest) GetJobID() string {
	if x != nil {
		return x.JobID
	}
	return ""
}

var File_pb_gnarkd_proto protoreflect.FileDescriptor

var file_pb_gnarkd_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x70, 0x62, 0x2f, 0x67, 0x6e, 0x61, 0x72, 0x6b, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x67, 0x6e, 0x61, 0x72, 0x6b, 0x64, 0x22, 0x57, 0x0a, 0x0c, 0x50, 0x72, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x69, 0x72,
	0x63, 0x75, 0x69, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x69,
	0x72, 0x63, 0x75, 0x69, 0x74, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x07, 0x77, 0x69, 0x74, 0x6e, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x07, 0x77, 0x69, 0x74, 0x6e,
	0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x77, 0x69, 0x74, 0x6e, 0x65,
	0x73, 0x73, 0x22, 0xef, 0x01, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x67, 0x6e, 0x61, 0x72, 0x6b,
	0x64, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0c, 0x48, 0x01, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6f, 0x66, 0x88, 0x01, 0x01, 0x22, 0x52,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x51, 0x55, 0x45, 0x55,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x0b, 0x0a, 0x07, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x45, 0x44, 0x10, 0x03, 0x12, 0x13, 0x0a,
	0x0f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x57, 0x49, 0x54, 0x4e, 0x45, 0x53, 0x53,
	0x10, 0x04, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x65, 0x72, 0x72, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70,
	0x72, 0x6f, 0x6f, 0x66, 0x22, 0x28, 0x0a, 0x10, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x44, 0x32, 0x7d,
	0x0a, 0x07, 0x47, 0x72, 0x6f, 0x74, 0x68, 0x31, 0x36, 0x12, 0x32, 0x0a, 0x05, 0x50, 0x72, 0x6f,
	0x76, 0x65, 0x12, 0x14, 0x2e, 0x67, 0x6e, 0x61, 0x72, 0x6b, 0x64, 0x2e, 0x50, 0x72, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x6e, 0x61, 0x72, 0x6b,
	0x64, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a,
	0x09, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x2e, 0x67, 0x6e, 0x61,
	0x72, 0x6b, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x67, 0x6e, 0x61, 0x72, 0x6b, 0x64, 0x2e, 0x50, 0x72,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x28, 0x01, 0x30, 0x01, 0x42, 0x26, 0x5a,
	0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x6f, 0x6e, 0x73,
	0x65, 0x6e, 0x73, 0x79, 0x73, 0x2f, 0x67, 0x6e, 0x61, 0x72, 0x6b, 0x2f, 0x67, 0x6e, 0x61, 0x72,
	0x6b, 0x64, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pb_gnarkd_proto_rawDescOnce sync.Once
	file_pb_gnarkd_proto_rawDescData = file_pb_gnarkd_proto_rawDesc
)

func file_pb_gnarkd_proto_rawDescGZIP() []byte {
	file_pb_gnarkd_proto_rawDescOnce.Do(func() {
		file_pb_gnarkd_proto_rawDescData = protoimpl.X.CompressGZIP(file_pb_gnarkd_proto_rawDescData)
	})
	return file_pb_gnarkd_proto_rawDescData
}

var file_pb_gnarkd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pb_gnarkd_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pb_gnarkd_proto_goTypes = []interface{}{
	(ProveResult_Status)(0),  // 0: gnarkd.ProveResult.Status
	(*ProveRequest)(nil),     // 1: gnarkd.ProveRequest
	(*ProveResult)(nil),      // 2: gnarkd.ProveResult
	(*JobStatusRequest)(nil), // 3: gnarkd.JobStatusRequest
}
var file_pb_gnarkd_proto_depIdxs = []int32{
	0, // 0: gnarkd.ProveResult.status:type_name -> gnarkd.ProveResult.Status
	1, // 1: gnarkd.Groth16.Prove:input_type -> gnarkd.ProveRequest
	3, // 2: gnarkd.Groth16.JobStatus:input_type -> gnarkd.JobStatusRequest
	2, // 3: gnarkd.Groth16.Prove:output_type -> gnarkd.ProveResult
	2, // 4: gnarkd.Groth16.JobStatus:output_type -> gnarkd.ProveResult
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pb_gnarkd_proto_init() }
func file_pb_gnarkd_proto_init() {
	if File_pb_gnarkd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pb_gnarkd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_gnarkd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProveResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pb_gnarkd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pb_gnarkd_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_pb_gnarkd_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pb_gnarkd_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_gnarkd_proto_goTypes,
		DependencyIndexes: file_pb_gnarkd_proto_depIdxs,
		EnumInfos:         file_pb_gnarkd_proto_enumTypes,
		MessageInfos:      file_pb_gnarkd_proto_msgTypes,
	}.Build()
	File_pb_gnarkd_proto = out.File
	file_pb_gnarkd_proto_rawDesc = nil
	file_pb_gnarkd_proto_goTypes = nil
	file_pb_gnarkd_proto_depIdxs = nil
}
