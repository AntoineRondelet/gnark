// Copyright 2020 ConsenSys Software Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package gnarkd;

option go_package = "github.com/consensys/gnark/gnarkd/pb";

/*
 Provides services to compute and verify Groth16 proofs
 */
service Groth16 {
	// Prove takes circuitID and optional witness as parameter. If optional witness is not specified
	// ProveJobStatus will be in a status "awaiting for witness" which must be sent outside gRPC
	// through a TCP connection. This ensure that the API can deal with large witnesses. 
	// For small circuits, ProveResult may contain the proof. For large circuits, must use JobStatus and 
	// await for async result
	rpc Prove(ProveRequest) returns (ProveResult);

	// JobStatus is a bidirectional stream enabling clients to regularly poll the server to get their job status
	rpc JobStatus(stream JobStatusRequest) returns (stream ProveResult);
}


message ProveRequest {
	string circuitID = 1;
	optional bytes witness = 2;
}

message ProveResult {
	string jobID = 1;
	enum Status {
		QUEUED = 0;
		RUNNING = 1;
		COMPLETED = 2;
		ERRORED = 3;
		WAITING_WITNESS = 4;
	}
	Status status = 2;
	optional string err = 3;
	optional bytes proof = 4;
}

message JobStatusRequest {
	string jobID = 1;
}
